const generateMessage = (entity) => ({
    alreadyExist: `${entity} already exist`,
    notExist: `${entity} not found`,
    created: `${entity} created successfully`,
    failToCreate: `Failed to create ${entity}`,
    updated: `${entity} updated successfully`,
    failToUpdate: `Failed to update ${entity}`,
    deleted: `${entity} deleted successfully`,
    failToDelete: `Failed to delete ${entity}`,
    fetchedSuccessfully: `${entity} fetched successfully`,
    failToFetch: `Failed to fetch ${entity}`,
  });
  
  export const messages = {
    file: { required: "file is required" },
    user: {
      ...generateMessage("user"),
      verified: "user verified successfully",
      invalidCredntiols: "invalid credentials", 
      notVerified: "user not verified",
      invalidToken: "invalid token",
      loginSuccessfully: "login successfully",
      unauthorized: "unauthorized to access this API",
      invalidPassword: "invalid password",
      passwordUpdated: "password updated successfully",
      invalidOTP: "invalid OTP",
      failToUpdatePassword: "failed to update password",
      noAccountsFound: "no accounts found",
      otpSent: "OTP sent successfully",
    },
    medicine: {
      ...generateMessage("medicine"),
      noNameMatch: (name) => `No medicines found with the name "${name}".`,
      noBrandMatch: (brand) => `No medicines found with the brand "${brand}".`,
      noCategoryMatch: (category) => `No medicines found in the category "${category}".`,
      noPriceMatch: `No medicines found within the price range.`,
      noStockMatch: `No medicines found within the stock range.`,
      noExpiryDateMatch: (expiryDate) => `No medicines found expiring on or before "${expiryDate}".`,
      noManufacturerMatch: (manufacturer) => `No medicines found from the manufacturer "${manufacturer}".`,
      noBatchNumberMatch: (batchNumber) => `No medicines found with the batch number "${batchNumber}".`,
      noDosageMatch: (dosage) => `No medicines found with the dosage "${dosage}".`,
      noPrescriptionRequiredMatch: (prescriptionRequired) => `No medicines found with prescription required status "${prescriptionRequired}".`,
      noFilterProvided: `You must provide at least one of id, name, or brand.`,
      noIdProvided: `You must provide a medicine ID.`,
  },
  };
  